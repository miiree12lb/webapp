{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirei\\\\Desktop\\\\portfolio\\\\src\\\\QuoteSlideshow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// @ts-ignore\nimport \"./css/quotes.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteSlideshow = ({\n  quotes,\n  autoPlay = false\n}) => {\n  _s();\n  const [currentQuoteIndex, setCurrentQuoteIndex] = useState(0);\n  const nextQuote = () => {\n    setCurrentQuoteIndex(prevIndex => (prevIndex + 1) % quotes.length);\n  };\n  const prevQuote = () => {\n    setCurrentQuoteIndex(prevIndex => (prevIndex - 1 + quotes.length) % quotes.length);\n  };\n  React.useEffect(() => {\n    if (autoPlay) {\n      const interval = setInterval(nextQuote, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [autoPlay]);\n  const currentQuote = quotes[currentQuoteIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quotes_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"previous_quote\",\n      onClick: prevQuote,\n      children: \"\\u276E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: currentQuote.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"- \", currentQuote.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"next_quote\",\n      onClick: nextQuote,\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(QuoteSlideshow, \"8CKuRwyE9g6u8Aq0huLFzcf6/dQ=\");\n_c = QuoteSlideshow;\nexport default QuoteSlideshow;\nvar _c;\n$RefreshReg$(_c, \"QuoteSlideshow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuoteSlideshow","quotes","autoPlay","_s","currentQuoteIndex","setCurrentQuoteIndex","nextQuote","prevIndex","length","prevQuote","useEffect","interval","setInterval","clearInterval","currentQuote","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","text","author","_c","$RefreshReg$"],"sources":["C:/Users/mirei/Desktop/portfolio/src/QuoteSlideshow.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n// @ts-ignore\r\nimport \"./css/quotes.css\";\r\n\r\ninterface Quote {\r\n    text: string;\r\n    author: string;\r\n}\r\n\r\ninterface QuoteSlideshowProps {\r\n    quotes: Quote[];\r\n    autoPlay?: boolean;\r\n}\r\n\r\nconst QuoteSlideshow: React.FC<QuoteSlideshowProps> = ({ quotes, autoPlay = false }) => {\r\n    const [currentQuoteIndex, setCurrentQuoteIndex] = useState(0);\r\n\r\n    const nextQuote = () => {\r\n        setCurrentQuoteIndex((prevIndex) => (prevIndex + 1) % quotes.length);\r\n    };\r\n\r\n    const prevQuote = () => {\r\n        setCurrentQuoteIndex((prevIndex) => (prevIndex - 1 + quotes.length) % quotes.length);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (autoPlay) {\r\n            const interval = setInterval(nextQuote, 5000);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [autoPlay]);\r\n\r\n    const currentQuote = quotes[currentQuoteIndex];\r\n\r\n    return (\r\n        <div id=\"quotes_container\">\r\n            <button id=\"previous_quote\" onClick={prevQuote}>&#10094;</button>\r\n            <div id=\"quote\">\r\n                <p><i>{currentQuote.text}</i></p>\r\n                <p>- {currentQuote.author}</p>\r\n            </div>\r\n            <button id=\"next_quote\" onClick={nextQuote}>&#10095;</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuoteSlideshow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY1B,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAE7D,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACpBD,oBAAoB,CAAEE,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIN,MAAM,CAACO,MAAM,CAAC;EACxE,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBJ,oBAAoB,CAAEE,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,GAAGN,MAAM,CAACO,MAAM,IAAIP,MAAM,CAACO,MAAM,CAAC;EACxF,CAAC;EAEDZ,KAAK,CAACc,SAAS,CAAC,MAAM;IAClB,IAAIR,QAAQ,EAAE;MACV,MAAMS,QAAQ,GAAGC,WAAW,CAACN,SAAS,EAAE,IAAI,CAAC;MAC7C,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC;IACxC;EACJ,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMY,YAAY,GAAGb,MAAM,CAACG,iBAAiB,CAAC;EAE9C,oBACIL,OAAA;IAAKgB,EAAE,EAAC,kBAAkB;IAAAC,QAAA,gBACtBjB,OAAA;MAAQgB,EAAE,EAAC,gBAAgB;MAACE,OAAO,EAAER,SAAU;MAAAO,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjEtB,OAAA;MAAKgB,EAAE,EAAC,OAAO;MAAAC,QAAA,gBACXjB,OAAA;QAAAiB,QAAA,eAAGjB,OAAA;UAAAiB,QAAA,EAAIF,YAAY,CAACQ;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACjCtB,OAAA;QAAAiB,QAAA,GAAG,IAAE,EAACF,YAAY,CAACS,MAAM;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACNtB,OAAA;MAAQgB,EAAE,EAAC,YAAY;MAACE,OAAO,EAAEX,SAAU;MAAAU,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEd,CAAC;AAAClB,EAAA,CA9BIH,cAA6C;AAAAwB,EAAA,GAA7CxB,cAA6C;AAgCnD,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}